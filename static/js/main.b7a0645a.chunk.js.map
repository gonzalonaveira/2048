{"version":3,"sources":["reducers/gameSlice.js","utils/utils.js","components/Tile.jsx","components/Message.jsx","components/Board.jsx","hooks/useArrowsEvent.js","components/Box.jsx","components/GameMenu.jsx","components/ChangeTheme.jsx","themes/darkTheme.js","themes/index.js","themes/lightTheme.js","components/App.jsx","serviceWorker.js","reducers/index.js","index.js"],"names":["moveRow","movingRow","direction","len","length","moved","row","col","needToMove","x","addSameValues","i","y","includes","addRandomValueToMatrix","matrix","minMaxX","minMaxY","probability","minX","maxX","minY","maxY","validCoords","j","push","randomCoord","_","random","Math","newGameState","defaultEmpty","minMax","moveTiles","board","payload","nb","Object","keys","reverse","map","boardLength","rotateRight","gameSlice","createSlice","name","initialState","score","highestScore","gameOver","won","status","keepPlaying","reducers","state","action","newGame","move","console","log","JSON","parse","stringify","boardClone","cloneDeep","possiblePayloads","original","haveAvailableMovements","actual","isEqual","checkAvailableMovements","max","config","left","right","up","down","round","floor","reduce","acc","colAcc","highestTile","flat","v","getHighestTile","selectBoard","game","selectActualScore","selectHighestScore","selectHasWon","selectKeepPlaying","selectIsGameOver","actions","TileContainer","styled","div","props","theme","borderRadius","secondaryColor","foreground","Tile","key","className","value","MessageContainer","border","white","Message","children","BoardContainer","Board","callback","dispatch","useDispatch","e","useEffect","handler","event","match","toLowerCase","window","addEventListener","removeEventListener","useSelector","hasWon","isGameOver","wantsToKeepPlaying","isHardcoreGamer","onClick","cell","BoxContainer","primaryColor","Box","label","GameMenuContainer","GameMenu","CornerContainer","LightBulb","viewBox","height","fill","d","Moon","ChangeTheme","themeName","setTheme","undefined","darkTheme","DEFAULT_THEME","defaultThemeAttributes","font","themes","dark","light","GlobalStyle","createGlobalStyle","AppWrapper","AppContainer","App","useState","setThemeName","merge","getTheme","Boolean","location","hostname","combineReducers","gameReducer","loggerMiddleware","createLogger","store","configureStore","middleware","getDefaultMiddleware","reducer","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7a0645a.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  rotateLeft,\n  rotateRight,\n  generateNumber,\n  addSameValues,\n  sumMatrixValues,\n  getHighestTile,\n} from \"../utils/utils\";\n\nconst FOUR_PROBABILITY = 0.10;\nconst WIN_SCORE = 2048;\n\nconst moveRow = (movingRow, direction) => {\n  const len = movingRow.length;\n  let moved = false;\n\n  const { needToMove, row } = addSameValues(movingRow);\n\n  if (needToMove === false) {\n    return { moved, row };\n  }\n\n  // Move all the values to one side or the other\n  for (let i = 0; i < len * len; i++) {\n    const y = i % len;\n    if (y !== len - 1) {\n      if ([\"left\", \"up\"].includes(direction)) {\n        // current is empty and next is not\n        if (row[y] === 0 && row[y + 1] !== 0) {\n          row[y] = row[y + 1]; // move next to current\n          row[y + 1] = 0;\n          moved = true;\n        }\n      }\n      if ([\"right\", \"down\"].includes(direction)) {\n        // current is not empty and next is\n        if (row[y] !== 0 && row[y + 1] === 0) {\n          row[y + 1] = row[y]; // move current to next\n          row[y] = 0;\n          moved = true;\n        }\n      }\n    }\n  }\n\n  return { moved, row };\n};\n\n/**\n * Add a random value (2 || 4) in an available tile of the board\n * @param matrix: board\n * @param minMaxX: min / max value of the X axis\n * @param minMaxY: min / max value of the Y axis\n * @returns {*}\n */\nconst addRandomValueToMatrix = (matrix, minMaxX, minMaxY) => {\n  const [minX, maxX] = minMaxY;\n  const [minY, maxY] = minMaxX;\n\n  const validCoords = [];\n  // Get the possible locations for a new number\n  // in the half of the board we are allow to insert a new item\n  for (let i = minX; i <= maxX; i++) {\n    for (let j = minY; j <= maxY; j++) {\n      if (matrix[i][j] === 0) {\n        validCoords.push([i, j]);\n      }\n    }\n  }\n  if (validCoords.length > 0) {\n    const randomCoord = _.random(0, (validCoords.length - 1));\n    const [x, y] = validCoords[randomCoord];\n    matrix[x][y] = generateNumber(FOUR_PROBABILITY);\n  }\n  return matrix;\n};\n\nconst newGameState = () => {\n  let defaultEmpty = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  const max = defaultEmpty.length - 1;\n  const minMax = [0, max];\n\n  defaultEmpty = addRandomValueToMatrix(defaultEmpty, minMax, minMax);\n  return addRandomValueToMatrix(defaultEmpty, minMax, minMax);\n};\n\nconst moveTiles = (board, payload) => {\n  let nb = board;\n\n  if ([\"down\", \"up\"].includes(payload)) {\n    nb = rotateLeft(nb);\n  }\n\n  const boardLength = nb.length;\n  for (let i = 0; i < boardLength; i++) {\n    const { moved, row } = moveRow(nb[i], payload);\n    if (moved === true) {\n      nb[i] = row;\n    }\n  }\n\n  if ([\"down\", \"up\"].includes(payload)) {\n    nb = rotateRight(nb);\n  }\n\n  return nb;\n};\n\n/**\n * Check if there are any available moves in the board\n * @param board\n * @returns {boolean}\n */\nconst checkAvailableMovements = (board) => {\n  const possiblePayloads = [\"right\", \"left\", \"down\", \"up\"];\n  // Clone to not affect the original board\n  const original = _.cloneDeep(board);\n  let haveAvailableMovements = false;\n\n  for (let i = 0; i < possiblePayloads.length; i++) {\n    // We move the tiles, and check against the original board\n    // If these are not the same, means there are movements available\n    const actual = moveTiles(board, possiblePayloads[i]);\n    if (_.isEqual(original, actual) === false) {\n      haveAvailableMovements = true;\n      i = possiblePayloads.length;\n    }\n  }\n\n  return haveAvailableMovements;\n};\n\nconst gameSlice = createSlice({\n  name: \"game\",\n  initialState: {\n    score: 0,\n    highestScore: 0,\n    gameOver: false,\n    won: {\n      status: true,\n      keepPlaying: false,\n    },\n    board: newGameState(),\n  },\n  reducers: {\n    keepPlaying(state, action) {\n      state.won.keepPlaying = true;\n      return state;\n    },\n    newGame(state, action) {\n      state.score = 0;\n      state.board = newGameState();\n      state.gameOver = false;\n      state.won = {\n        status: false,\n        keepPlaying: false,\n      };\n      return state;\n    },\n    move(state, action) {\n      if (state.gameOver === true) {\n        return state;\n      }\n\n      if (state.won.status === true && state.won.keepPlaying === false) {\n        return state;\n      }\n\n      const { payload } = action;\n      let { board } = state;\n      const boardLength = board.length;\n      console.log(JSON.parse(JSON.stringify(board)));\n\n      const boardClone = _.cloneDeep(board);\n      const isThereMoreMovementsAvailable = checkAvailableMovements(boardClone, payload);\n\n      if (isThereMoreMovementsAvailable === false) {\n        state.gameOver = true;\n        return state;\n      }\n\n      board = moveTiles(board, payload);\n      console.log(JSON.parse(JSON.stringify(board)));\n\n      // If the user moved to a direction that didnt generate any change\n      // We dont need to add any new value.\n      const haveToAddNewValue = (_.isEqual(boardClone, board) === false);\n\n      // If there are not movements to that side we dont add any new value\n      if (haveToAddNewValue === true) {\n        const max = boardLength - 1;\n        const minMaxY = [0, max];\n        const minMaxX = [0, max];\n\n        const config = {\n          left: 0, right: 1, up: 0, down: 1,\n        };\n\n        if ([\"left\", \"right\"].includes(payload)) {\n          minMaxX[config[payload]] = Math.round(max / 2);\n        }\n        if ([\"up\", \"down\"].includes(payload)) {\n          minMaxY[config[payload]] = Math.floor(max / 2);\n        }\n\n        // if (action.payload === \"left\") {\n        //   minMaxX[0] = Math.round(max / 2);\n        // }\n        // if (action.payload === \"right\") {\n        //   minMaxX[1] = Math.floor(max / 2);\n        // }\n        // if (action.payload === \"up\") {\n        //   minMaxY[0] = Math.round(max / 2);\n        // }\n        // if (action.payload === \"down\") {\n        //   minMaxY[1] = Math.floor(max / 2);\n        // }\n\n        board = addRandomValueToMatrix(board, minMaxX, minMaxY);\n      }\n\n      const score = sumMatrixValues(board);\n      const highestTile = getHighestTile(board);\n\n      if (score > state.highestScore) {\n        state.highestScore = score;\n      }\n      state.won.status = (highestTile >= WIN_SCORE);\n      state.score = score;\n      state.board = board;\n\n      return state;\n    },\n  },\n});\n\nexport const selectBoard = (state) => state.game.board;\nexport const selectActualScore = (state) => state.game.score;\nexport const selectHighestScore = (state) => state.game.highestScore;\nexport const selectHasWon = (state) => state.game.won.status;\nexport const selectKeepPlaying = (state) => state.game.won.keepPlaying;\nexport const selectIsGameOver = (state) => state.game.gameOver;\n\nexport const { newGame, move, keepPlaying } = gameSlice.actions;\n\nexport default gameSlice.reducer;\n","/**\n * Rotate matrix to the left\n * @param matrix\n * @returns *[] matrix\n */\nconst rotateLeft = (matrix) => Object.keys(matrix[0])\n  .reverse()\n  .map((i) => matrix.map((row) => row[i]));\n\n/**\n * Rotate matrix to the right\n * @param matrix\n * @returns *[] matrix\n */\nconst rotateRight = (matrix) => Object.keys(matrix[0])\n  .map((i) => matrix.map((row) => row[i]).reverse());\n\n/**\n * Generate either a 2 or a 4 based on the configured probability for the 4\n * @param probability\n * @returns {number}\n */\nconst generateNumber = (probability) => ((Math.random() > probability) ? 2 : 4);\n\nconst addSameValues = (row) => {\n  const len = row.length;\n  let col = -1;\n  let needToMove = false;\n\n  for (let x = 0; x < len; x++) {\n    if (row[x] === 0) {\n      needToMove = true;\n    } else if (col === -1 || row[col] !== row[x]) {\n      // If we dont have a current col\n      // If the number are not same we can't add them\n      col = x;\n    } else if (row[col] === row[x]) {\n      // sum same numbers\n      row[col] += row[x];\n      row[x] = 0;\n      col = -1;\n      needToMove = true;\n    }\n  }\n  return { needToMove, row };\n};\n\nconst sumMatrixValues = (matrix) => (\n  matrix.reduce((acc, row) => acc + row.reduce((colAcc, col) => colAcc + col, 0), 0)\n);\n\nconst getHighestTile = (matrix) => matrix.flat().reduce((acc, v) => ((v > acc) ? v : acc), 0);\n\nexport {\n  sumMatrixValues,\n  rotateLeft,\n  rotateRight,\n  generateNumber,\n  addSameValues,\n  getHighestTile,\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TileContainer = styled.div`\n    width: 110px;\n    height: 110px;\n    border: rgba(209, 238, 210, 0.35);\n    background: rgba(238, 228, 218, 0.35);\n    border-radius: ${(props) => `calc(${props.theme.borderRadius} / 2)`};\n    line-height: 110px;\n    color: ${(props) => props.theme.secondaryColor};\n    user-select: none;\n\n    .tileContent {\n        border-radius: ${(props) => `calc(${props.theme.borderRadius} / 2)`};\n        background: ${(props) => props.theme.foreground};\n        background: #eee4da;\n        text-align: center;\n        font-weight: bold;\n        z-index: 10;\n        font-size: 45px;\n    }\n`;\n\nfunction Tile(props) {\n  return <TileContainer key={`${props.x}-${props.y}`}>\n    <div className=\"tileContent\">{ props.value !== 0 ? props.value : null }</div>\n  </TileContainer>;\n}\n\nexport default Tile;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MessageContainer = styled.div`\n    display: grid;\n    position: fixed;\n    width: 450px;\n    height: 150px;\n    align-self: end; /* bottom of column */\n    justify-self: end; /* right of row */\n    z-index: 100;\n    background: ${(props) => props.theme.foreground};\n    border: ${(props) => `${props.theme.border} ${props.theme.secondaryColor}`};\n    border-radius: ${(props) => props.theme.borderRadius}};\n    color: ${(props) => props.theme.white}};\n    margin-left: 28px;\n    margin-top: 8%;\n    box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.3);\n    \n    h2 {\n      font-size: 50px;\n      text-align: center;\n      margin-bottom: 0px;\n    }\n    \n    button {\n      width: 100px;\n      height: 80%;\n      font-weight: 700;\n      color: ${(props) => props.theme.white};\n      background: ${(props) => props.theme.secondaryColor};\n      border-radius: ${(props) => props.theme.borderRadius};\n      margin: 0 auto;\n    }\n`;\n\nfunction Message(props) {\n  return <MessageContainer>\n    {props.children}\n  </MessageContainer>;\n}\n\nexport default Message;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectBoard,\n  selectHasWon,\n  selectIsGameOver,\n  selectKeepPlaying,\n  move,\n  keepPlaying,\n} from \"../reducers/gameSlice\";\n\nimport useArrowsEvent from \"../hooks/useArrowsEvent\";\n\nimport Tile from \"./Tile.jsx\";\nimport Message from \"./Message\";\n\nconst BoardContainer = styled.div`\n    height: 500px;\n    width: 500px;\n\n    padding-top: 15px;\n    padding-left: 15px;\n\n    display: grid;\n    grid-template-columns: 110px 110px 110px 110px;\n    grid-template-rows: 110px 110px 110px 110px;\n\n    grid-column-gap: 15px;\n    grid-row-gap: 15px;\n\n    background: ${(props) => props.theme.foreground};\n    border-radius: ${(props) => props.theme.borderRadius}};\n`;\n\nfunction Board() {\n  const dispatch = useDispatch();\n\n  useArrowsEvent((e) => {\n    dispatch(move(e));\n  });\n\n  const board = useSelector(selectBoard);\n  const hasWon = useSelector(selectHasWon);\n  const isGameOver = useSelector(selectIsGameOver);\n  const wantsToKeepPlaying = useSelector(selectKeepPlaying);\n\n  const isHardcoreGamer = hasWon === true && wantsToKeepPlaying === false;\n\n  return (<>\n          { isHardcoreGamer === false ? null\n            : <Message>\n                <h2>You Won!</h2>\n                <button onClick={() => dispatch(keepPlaying())}>Keep playing</button>\n              </Message>\n          }\n          { isGameOver ? <Message><h2>You Lost!</h2></Message> : null }\n        <BoardContainer>\n        {board.map(\n          (row, i) => row.map((cell, j) => <Tile key={`tile-${j}-${i}`} value={cell} x={j} y={i}/>),\n        )}\n        </BoardContainer>\n    </>);\n}\n\nexport default Board;\n","import { useEffect } from \"react\";\n\n/**\n * Hook to use the arrows\n * @param callback\n */\nexport default function useArrowsEvent(callback) {\n  useEffect(() => {\n    const handler = (event) => {\n      const { key } = event;\n      const match = key.toLowerCase().match(/arrow(up|right|down|left)/);\n      if (match) {\n        callback(match[1]);\n      }\n    };\n    window.addEventListener(\"keydown\", handler);\n    return () => {\n      window.removeEventListener(\"keydown\", handler);\n    };\n  }, [callback]);\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst BoxContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  font-weight: 700;\n  color: ${(props) => props.theme.primaryColor};\n  text-align: center;\n  position: relative;\n  background-color: ${(props) => props.theme.foreground};\n  padding: 5px 0;\n  border-radius: ${(props) => props.theme.borderRadius}};\n  font-size: 14px;\n\n  p {\n      text-transform: uppercase;\n      color: ${(props) => props.theme.white};\n      padding: 0px;\n      margin: 0px;\n  }\n \n  .boxValue {\n      font-size: 28px;\n  }\n`;\n\nfunction Box({ label, value }) {\n  return (\n      <BoxContainer>\n        <p>{label}</p>\n        <p className=\"boxValue\">{value}</p>\n      </BoxContainer>\n  );\n}\n\nexport default Box;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Box from \"./Box\";\nimport { newGame, selectActualScore, selectHighestScore } from \"../reducers/gameSlice\";\n\nconst GameMenuContainer = styled.div`\n    display: grid;\n    grid-template-columns: 50% 50%;\n    grid-column-gap: 10px;\n    grid-template-rows: auto;\n    \n    .titleBoxes{\n      display: grid;\n      grid-template-columns: 75% 25%;\n      grid-column-gap: 10px;\n      grid-template-rows: 75%;\n      margin-right: 10px;\n    }\n    \n    .newGame{\n      width: 100%;\n      height: 100%;\n      font-weight: 700;\n      color: ${(props) => props.theme.primaryColor};\n      background: ${(props) => props.theme.secondaryColor};\n      border-radius: ${(props) => props.theme.borderRadius}};\n    }\n    \n    .newGame:hover, .newGame:active{\n      cursor: pointer;\n      box-shadow: 0 0 4px 0 rgba(0,0,0,.25);\n      background: ${(props) => props.theme.foreground};\n    }\n    \n    .scoreBoxes{\n       display: grid;\n       grid-template-columns: 50% 50%;\n       grid-column-gap: 10px;\n       grid-template-rows: 64%;\n       margin-right: 5px;\n    }\n    \n    button:focus {\n      outline: 0;\n    }\n    \n    h1{\n      font-size: 70px;\n      margin: 0px;\n    }\n`;\n\nfunction GameMenu() {\n  const dispatch = useDispatch();\n  const score = useSelector(selectActualScore);\n  const highestScore = useSelector(selectHighestScore);\n\n  return (\n      <GameMenuContainer>\n        <div className=\"titleBoxes\">\n          <h1>2048</h1>\n          <button className=\"newGame\" onClick={() => dispatch(newGame())}>New Game</button>\n        </div>\n        <div className=\"scoreBoxes\">\n          <Box label={\"Score\"} value={score}/>\n          <Box label={\"Best\"} value={highestScore}/>\n        </div>\n      </GameMenuContainer>\n  );\n}\n\nexport default GameMenu;\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst CornerContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  \n  ::before,\n  ::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    border-color: transparent;\n    border-style: solid;\n  }\n  \n  ::before {\n    border-width: 1.5em;\n    border-right-color: ${(props) => props.theme.foreground};\n    border-top-color: ${(props) => props.theme.foreground};\n  }\n\n  ::after {\n    border-radius: 0em;\n    border-width: 3.35em;\n    border-right-color: ${(props) => props.theme.foreground};\n    border-top-color: ${(props) => props.theme.foreground};\n  }\n  \n  svg {\n    z-index: 1000;\n    position: absolute;\n    top: 0;\n    right: 0;\n  }\n`;\n\n\nfunction LightBulb(props) {\n  return (\n      <svg viewBox=\"0 0 93.534 110\" height={60} onClick={props.onClick}\n      >\n        <path\n            fill=\"#ccc\"\n            d=\"M56.399 80.107v-2.822c0-4.96 2.015-9.725 5.529-13.073 4.396-4.189 6.817-9.839 6.817-15.909 0-12.119-9.859-21.978-21.978-21.978-.827 0-1.667.046-2.496.138-10.5 1.161-18.86 10.013-19.447 20.591a21.998 21.998 0 006.64 17.02c3.604 3.496 5.671 8.31 5.671 13.208v2.824a5.444 5.444 0 005.438 5.438h8.387a5.442 5.442 0 005.439-5.437zm-4 0a1.44 1.44 0 01-1.438 1.438h-8.387a1.44 1.44 0 01-1.438-1.438v-2.824c0-5.973-2.51-11.833-6.886-16.079a18 18 0 01-5.431-13.927c.48-8.65 7.312-15.888 15.893-16.837a18.699 18.699 0 012.057-.114c9.913 0 17.978 8.064 17.978 17.978 0 4.965-1.98 9.586-5.576 13.013-4.302 4.099-6.77 9.919-6.77 15.969v2.821zM53.276 87.521H40.258a1.5 1.5 0 100 3h13.019a1.5 1.5 0 10-.001-3zM54.776 93.761a1.5 1.5 0 00-1.5-1.5H40.258a1.5 1.5 0 100 3h13.019a1.5 1.5 0 001.499-1.5zM11.5 48.267h8.643a1.5 1.5 0 100-3H11.5a1.5 1.5 0 100 3zM83.534 46.767a1.5 1.5 0 00-1.5-1.5h-8.643a1.5 1.5 0 100 3h8.643a1.5 1.5 0 001.5-1.5zM45.267 11.5v8.643a1.5 1.5 0 103 0V11.5a1.5 1.5 0 10-3 0zM70.644 20.769l-6.111 6.111a1.5 1.5 0 102.122 2.121l6.111-6.111a1.5 1.5 0 10-2.122-2.121zM29.001 64.533a1.5 1.5 0 00-2.121 0l-6.111 6.111a1.5 1.5 0 102.122 2.121l6.111-6.111a1.5 1.5 0 00-.001-2.121zM26.88 29.001c.293.293.677.439 1.061.439a1.5 1.5 0 001.061-2.56l-6.111-6.111a1.5 1.5 0 10-2.121 2.121zM70.644 72.765c.293.293.677.439 1.061.439a1.5 1.5 0 001.061-2.56l-6.111-6.111a1.5 1.5 0 10-2.121 2.121zM51.521 98.5a1.5 1.5 0 00-1.5-1.5h-6.509a1.5 1.5 0 100 3h6.509a1.5 1.5 0 001.5-1.5z\" />\n      </svg>\n  );\n}\n\nfunction Moon(props) {\n  return (\n      <svg viewBox=\"0 0 352.726 352.726\" height={40} onClick={props.onClick}>\n        <path d=\"M245.879 1.526c-5.6-2.8-12-1.6-16.8 2.4s-6.8 10-5.2 16c4 16.4 5.6 33.6 4.4 51.6-5.2 84-72.8 151.2-156.8 156.4-17.2 1.2-34.4-.4-51.6-4-6-1.6-12 .4-16 5.6-4 4.8-4.8 11.2-2.4 16.8 30.4 65.2 95.2 106.4 167.2 106.4 3.2 0 6.8 0 10-.4 92.4-4.8 168.4-81.2 173.6-173.6 4.4-75.6-37.2-145.2-106.4-177.2zm90.4 176.4c-4.4 84.4-74 154-158.4 158.4-69.2 3.6-132.8-34.4-161.6-96.8 18.8 4.4 37.6 5.6 56.4 4.4 92-6 166-79.6 172-171.6 1.2-19.6-.4-38.4-4.8-56.4 62.4 29.2 100.4 92.8 96.4 162z\" />\n        <path d=\"M242.679 277.526c-3.6 2.4-4.4 7.6-2 11.2 1.6 2.4 4 3.6 6.8 3.6 1.6 0 3.2-.4 4.4-1.2 30.8-21.6 52.8-52.8 60.8-89.2.8-4.4-1.6-8.8-6-9.6-4.4-.8-8.4 1.6-9.6 6-7.2 32.4-26.4 60.4-54.4 79.2zM213.479 292.726c-2.4.8-4.4 1.6-7.2 2.4-4.4 1.2-6.8 5.6-5.6 10 1.2 3.6 4.4 6 7.6 6 .8 0 1.6 0 2.4-.4 3.6-.8 6-2 8.8-3.2 4-1.6 6-6.4 4.4-10.4-1.6-4.4-6.4-6.4-10.4-4.4z\" />\n      </svg>\n  );\n}\n\nfunction ChangeTheme({ themeName, setTheme }) {\n  return (\n      <CornerContainer>\n        {(themeName === \"dark\" || themeName === undefined)\n          ? <LightBulb onClick={() => setTheme(\"light\")}/>\n          : <Moon onClick={() => setTheme(\"dark\")}/>\n        }\n      </CornerContainer>\n  );\n}\n\n\nexport default ChangeTheme;\n","\nconst darkTheme = {\n  primaryColor: \"#282a36\",\n  secondaryColor: \"#6272a4\",\n\n  foreground: \"#44475a\",\n  white: \"#f8f8f2\",\n\n};\n\nexport default darkTheme;\n","import _ from \"lodash\";\nimport darkTheme from \"./darkTheme\";\nimport lightTheme from \"./lightTheme\";\n\nconst DEFAULT_THEME = darkTheme;\n\nconst defaultThemeAttributes = {\n  font: \"Helvetica Neue,Arial,sans-serif\",\n  border: \"5px solid\",\n  borderRadius: \"5px\",\n};\n\nexport const themes = {\n  dark: darkTheme,\n  light: lightTheme,\n};\n\nexport const getTheme = (themeName) => {\n  let theme = themes[themeName];\n  if (theme === undefined) {\n    theme = DEFAULT_THEME;\n  }\n  return _.merge(defaultThemeAttributes, theme);\n};\n","\nconst lightTheme = {\n  primaryColor: \"#faf8ef\",\n  secondaryColor: \"#776e65\",\n\n  foreground: \"#bbada0\",\n  white: \"#ffffff\",\n};\n\nexport default lightTheme;\n","import React, { useState } from \"react\";\nimport styled, { ThemeProvider, createGlobalStyle } from \"styled-components\";\nimport Board from \"./Board.jsx\";\nimport GameMenu from \"./GameMenu.jsx\";\nimport ChangeTheme from \"./ChangeTheme.jsx\";\nimport { getTheme } from \"../themes\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n      width:100%;\n      height:100%;\n      margin: 0;\n      padding: 0;\n      -webkit-tap-highlight-color: transparent;\n      font-family: ${(props) => props.theme.font};\n      font-size: 14px;\n  }\n`;\n\nconst AppWrapper = styled.div`\n  width:100%;\n  height:100%;\n  min-height: 100%;\n  background-color: ${(props) => props.theme.primaryColor};\n  color: ${(props) => props.theme.secondaryColor};\n`;\n\nconst AppContainer = styled.div`\n  width: 500px;\n  height:100%;\n  min-height: 100%;\n  margin: 0 auto;\n  padding-top:100px;\n  color: ${(props) => props.theme.secondaryColor};\n`;\n\nfunction App() {\n  const [themeName, setThemeName] = useState(undefined);\n  const theme = getTheme(themeName);\n\n\n  return (\n      <ThemeProvider theme={theme}>\n        <AppWrapper>\n          <ChangeTheme themeName={themeName} setTheme={setThemeName}/>\n          <AppContainer>\n            <GlobalStyle />\n            <GameMenu/>\n            <Board/>\n          </AppContainer>\n        </AppWrapper>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\nimport gameReducer from \"./gameSlice\";\n\nexport default combineReducers({\n  game: gameReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createLogger } from \"redux-logger\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport App from \"./components/App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./reducers\";\n\n\nconst loggerMiddleware = createLogger();\n\nconst store = configureStore({\n  middleware: [loggerMiddleware, ...getDefaultMiddleware()],\n  reducer: rootReducer,\n});\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}